
resources:
 repositories:
   - repository: NOP_4_50
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.50
   - repository: NOP_4_40
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.40
   - repository: NOP_4_30
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.30
   - repository: Plugin
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-Plugin-StyleEditor

trigger:
- main

variables:
  buildConfiguration: 'Release'
  pluginFolder: 'Nop.Plugin.Admin.StyleEditor'
  pluginSystemName: 'Admin.StyleEditor'
  githubProjectName: 'NOP-Plugin-StyleEditor'
  build_4_30: true
  build_4_40: true

pool:
 vmImage: 'ubuntu-latest'

steps:
- checkout: Plugin
- checkout: NOP_4_30
  submodules: true
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))
- checkout: NOP_4_40
  submodules: true
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))
- checkout: NOP_4_50
  submodules: true


- powershell: Get-ChildItem -Path '$(Build.SourcesDirectory)' -recurse
  displayName: 'List contents of $(Build.SourcesDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.30/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.40/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.50/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.50'

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.30/**/CustomPlugins/$(pluginFolder)/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.30
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.40/**/CustomPlugins/$(pluginFolder)/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.40
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.50/**/CustomPlugins/$(pluginFolder)/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.50

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.30/$(pluginSystemName)')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.30/$(pluginSystemName)' -ItemType Directory }
  displayName: 'Check and create directory - 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.40/$(pluginSystemName)')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.40/$(pluginSystemName)' -ItemType Directory }
  displayName: 'Check and create directory - 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.50/$(pluginSystemName)')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.50/$(pluginSystemName)' -ItemType Directory }
  displayName: 'Check and create directory - 4.50'

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\$(githubProjectName)\package\uploadedItems.json' -Destination '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy manifest file'

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.30\Presentation\Nop.Web\Plugins\$(pluginSystemName)\*' -Destination '$(Build.ArtifactStagingDirectory)\4.30\$(pluginSystemName)' -Recurse
  displayName: 'Copy plugin - 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.40\src\Presentation\Nop.Web\Plugins\$(pluginSystemName)\*' -Destination '$(Build.ArtifactStagingDirectory)\4.40\$(pluginSystemName)' -Recurse
  displayName: 'Copy plugin - 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.50\Presentation\Nop.Web\Plugins\$(pluginSystemName)\*' -Destination '$(Build.ArtifactStagingDirectory)\4.50\$(pluginSystemName)' -Recurse
  displayName: 'Copy plugin - 4.50'

- powershell: Get-ChildItem -Path '$(Build.ArtifactStagingDirectory)' -recurse
  displayName: 'List contents of $(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  displayName: 'Generate zip file'
  inputs:
    rootFolderOrFile: $(Build.ArtifactStagingDirectory)
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\$(pluginSystemName)_$(Build.BuildId).zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish zip file'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)\$(pluginSystemName)_$(Build.BuildId).zip'
    ArtifactName: GeneratedPackage